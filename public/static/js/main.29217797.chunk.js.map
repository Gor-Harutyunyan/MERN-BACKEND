{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.29217797.chunk.js","sourcesContent":["import { createContext } from 'react'\n\n \nexport const AuthContext = createContext({\n    isLoggedIn: false, \n    userId: null,\n    token: null,\n    login: () => {}, \n    logout: () => {}\n})\n\n\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import {useState, useCallback, useEffect} from 'react'\n\nlet logoutTimer\n\nexport const useAuth = () => {\n    const [token, setToken] = useState(false)\n    const [tokenExpirationDate, setTokenExpirationDate] = useState()\n    const [userId, setUserId] = useState(null)\n\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token)\n    setUserId(uid)\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60)\n    setTokenExpirationDate(tokenExpirationDate)\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString()\n      })\n    )\n\n  },[])\n  \n\n  const logout = useCallback(() => {\n    setToken(null)\n    setTokenExpirationDate(null)\n    setUserId(null)\n    localStorage.removeItem('userData')\n  },[])\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime()\n      logoutTimer = setTimeout(logout, remainingTime)\n    } else {\n      clearTimeout(logoutTimer)\n    }\n  }, [token, logout, tokenExpirationDate])\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'))\n    if (\n      storedData && \n      storedData.token && \n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration))\n    }\n  }, [login])\n\n  return {token, login, logout, userId}\n}","import React from 'react';\n\nimport './MainHeader.css'\n\nconst MainHeader = props => {\n    return <header className='main-header'>\n        {props.children}\n    </header>\n}\n\nexport default MainHeader","import React, {useContext} from 'react';\nimport {NavLink} from 'react-router-dom'\n\nimport { AuthContext } from '../../context/auth-context'\nimport './NavLinks.css'\n\nconst NavLinks = props => {\n    const auth = useContext(AuthContext)\n    return <ul className='nav-links'>\n        <li>\n            <NavLink to='/' exact>ALL USERS</NavLink>\n        </li>\n       {auth.isLoggedIn && <li>\n            <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>}\n        {auth.isLoggedIn && <li>\n            <NavLink to='/places/new'>ADD PLACE</NavLink>\n        </li>}\n        {!auth.isLoggedIn && <li>\n            <NavLink to='/auth'>AUTHENTICATE</NavLink>\n        </li>}\n        {auth.isLoggedIn && <li>\n            <button onClick={auth.logout}>LOGOUT</button>\n        </li>}\n    </ul>\n}\n\nexport default NavLinks;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {CSSTransition} from 'react-transition-group'\n\nimport './SideDrawer.css'\n\nconst SideDrawer = props => {\n    const content = (\n    <CSSTransition \n    in={props.show} \n    timeout={200} \n    classNames='slide-in-left'\n    mountOnEnter\n    unmountOnExit\n    >\n        <aside className='side-drawer' onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n    )\n\n    return ReactDOM.createPortal(content, document.getElementById('drawer-hook') )\n}\n\nexport default SideDrawer","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom'\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop'\n\nimport './MainNavigation.css'\n\n\nconst MainNavigation = props => {\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n    const openDrawerHandler = () => {\n        setDrawerIsOpen(true)\n    }\n\n    const closeDrawerHandler = () => {\n        setDrawerIsOpen(false)\n    }\n\n    return (\n        <>\n        {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n        {<SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n            <nav className='main-navigation__drawer-nav'>\n                <NavLinks/>\n            </nav>\n        </SideDrawer>\n        }\n        <MainHeader>\n            <button className='main-navigation__menu-btn' onClick={openDrawerHandler}>\n                <span/>\n                <span/>\n                <span/>\n            </button>\n            <h1 className='main-navigation__title'>\n            <Link to='/'>Your Places</Link>\n             </h1>\n            <nav className='main-navigation__header-nav'>\n            <NavLinks/>\n            </nav>\n        </MainHeader>\n        </>\n    )\n}\n\nexport default MainNavigation","import React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom'\n\n\n//import Users from './user/pages/Users'\n//import UserPlaces from './places/pages/UserPlaces'\n//import NewPlace from './places/pages/NewPlace';\n//import UpdatePlace from './places/pages/UpdatePlace';\n//import Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\nimport {AuthContext} from './shared/context/auth-context'\nimport {useAuth} from './shared/hooks/auth-hook'\n\nconst Users = React.lazy(() => import('./user/pages/Users'))\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'))\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'))\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'))\nconst Auth = React.lazy(() => import('./user/pages/Auth'))\n\n\n\nconst App = () => {\n  const {token, login, logout, userId} = useAuth()\n\n  let routes\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route exact path='/'>\n          <Users/>\n        </Route>\n        <Route exact path='/:userId/places'>\n          <UserPlaces/>\n        </Route>\n        <Route exact path='/places/new'>\n          <NewPlace/>\n        </Route>\n        <Route exact path='/places/:placeId'>\n          <UpdatePlace/>\n        </Route>\n        <Redirect to='/' />\n      </Switch>\n    )\n  } else {\n    routes = (\n      <Switch>\n        <Route exact path='/'>\n          <Users/>\n        </Route>\n        <Route exact path='/:userId/places'>\n        <UserPlaces/>\n          </Route>\n        <Route exact path='/auth'>\n          <Auth/>\n        </Route>\n        <Redirect to='/auth' />\n      </Switch>\n    )\n  }\n\n  return (\n    <AuthContext.Provider value={{\n        isLoggedIn: !!token,\n        token: token, \n        userId: userId, \n        login: login, \n        logout: logout\n    }}\n    >\n      <Router>\n        <MainNavigation />\n          <main>\n            <Suspense fallback={\n              <div className='center'>\n                <LoadingSpinner/>\n              </div>}>\n            {routes}\n            </Suspense>\n          </main>\n      </Router>\n      </AuthContext.Provider>\n  )\n}\n\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}