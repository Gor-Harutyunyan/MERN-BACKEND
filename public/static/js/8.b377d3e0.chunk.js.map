{"version":3,"sources":["shared/components/UIElements/Card.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Card","props","className","style","children","PlaceItem","auth","useContext","AuthContext","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","useHttpClient","isLoading","error","sendRequest","clearError","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","a","process","id","Authorization","token","onDelete","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","inverse","danger","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creatorId","to","PlaceList","items","length","map","place","key","creator","coordinates","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","useEffect","responseData","places","fetchPlaces","Fragment","deletedPlaceId","prevPlaces","filter"],"mappings":"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","file":"static/js/8.b377d3e0.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, {useState, useContext} from 'react';\n\nimport Card from '../../shared/components/UIElements/Card'\nimport Button from '../../shared/components/FormElements/Button'\nimport Modal from '../../shared/components/UIElements/Modal'\n//import Map from '../../shared/components/UIElements/Map'\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal'\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner'\n\nimport './PlaceItem.css'\n\n\n\n\nconst PlaceItem = props => {\n const auth = useContext(AuthContext)\n const [showMap, setShowMap] = useState(false);\n const [showConfirmModal, setShowConfirmModal] = useState(false)\n const {isLoading, error, sendRequest, clearError} = useHttpClient()\n\n const openMapHandler = () => setShowMap(true)\n\n const closeMapHandler = () => setShowMap(false)\n\n const showDeleteWarningHandler = () => {\n     setShowConfirmModal(true)\n }\n\n const cancelDeleteHandler = () => {\n     setShowConfirmModal(false)\n }\n\n const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false)\n    try {\n        await sendRequest(\n            process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`,\n            'DELETE',\n            null ,\n            {\n            Authorization: 'Bearer ' + auth.token\n            }\n        )\n        props.onDelete(props.id)\n    } catch (err) {}\n }\n\n return (\n<>\n  <ErrorModal error={error} onClear={clearError} />\n    <Modal \n        show={showMap} \n        onCancel={closeMapHandler} \n        header={props.address} \n        contentClass='place-item__modal-content'\n        footerClass='place-item__modal-actions'\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n    >\n        <div className='map-container'>\n            <h2>Here should be a map showing the location of this place on Google Maps</h2>\n            {/* <Map center={props.coordinates} zoom={16}/> */}\n        </div>\n    </Modal>\n    <Modal \n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header='Are you sure?' \n        footerClass='place-item__modal-actions' \n        footer={\n            <>\n            <Button inverse onClick={cancelDeleteHandler}>CANCEL</Button>\n            <Button danger onClick={confirmDeleteHandler}>DELETE</Button>\n            </>\n        }\n    >\n        <p>Do you want to proceed and delete this place? Please note that it can't be undone thereafter</p>\n    </Modal>\n    <li className='place-item'>\n        <Card className='place-item__content'>\n            {isLoading && <LoadingSpinner asOverlay />}\n        <div className='place-item__image'>\n            <img src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.title}/>\n        </div>\n        <div className='place-item__info'>\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n        </div>\n        <div className='place-item__actions'>\n            <Button inverse onClick={openMapHandler}>VIEW ON MAP</Button>\n            {auth.userId === props.creatorId && <Button to={`/places/${props.id}`}>EDIT</Button>}\n            {auth.userId === props.creatorId && <Button danger onClick={showDeleteWarningHandler} >DELETE</Button>} \n        </div>\n        </Card>\n    </li>\n </>\n )\n}\n\nexport default PlaceItem","import React from 'react';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card'\n\nimport PlaceItem from './PlaceItem';\n\nimport './PlaceList.css'\n\nconst PlaceList = props => {\n    if (props.items.length === 0) {\n        return (\n            <div className='place-list center'>\n                <Card>\n                    <h2>No places found. Maybe create one?</h2>\n                    <Button to='/places/new'>Share Place</Button>\n                </Card>\n            </div>\n        )\n    }\n\n    return <ul className='place-list'>\n        {props.items.map(place => (\n        <PlaceItem\n         key={place.id} \n         id={place.id} \n         image={place.image}\n         title={place.title}\n         description={place.description}\n         address={place.address}\n         creatorId={place.creator}\n         coordinates={place.location}\n         onDelete={props.onDeletePlace}\n         />\n        ))}\n    </ul>\n}\n\nexport default PlaceList","import React, {useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom'\n\nimport PlaceList from '../components/PlaceList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal'\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner'\nimport { useHttpClient } from '../../shared/hooks/http-hook'   \n\n\nconst UserPlaces = () => {\n    const [loadedPlaces, setLoadedPlaces] = useState()\n    const { isLoading, error, sendRequest, clearError } = useHttpClient()\n\n    const userId = useParams().userId\n\n    useEffect(() => {\n        const fetchPlaces = async () => {\n            try {\n                const responseData =  await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`)\n                setLoadedPlaces(responseData.places)\n            } catch (err) {}\n        }\n        fetchPlaces()\n    }, [sendRequest, userId])\n\n    const placeDeletedHandler = (deletedPlaceId) => {\n        setLoadedPlaces(prevPlaces => prevPlaces.filter(place => place.id !== deletedPlaceId))\n    }\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            {isLoading && (\n                <div className='center'>\n                    <LoadingSpinner />\n                </div>\n            )}\n            { !isLoading && loadedPlaces && <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler}/>}\n        </React.Fragment>\n    )\n}\n\nexport default UserPlaces"],"sourceRoot":""}